# Generated from DE6Lexer.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,38,387,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,
        7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,
        2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,
        7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,
        2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,
        7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,
        2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,
        7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,1,0,1,0,1,
        0,1,1,1,1,1,1,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,
        5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,4,9,132,8,9,11,9,12,9,133,1,9,
        1,9,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,13,1,13,1,13,
        1,14,1,14,1,15,1,15,1,15,1,16,1,16,1,16,1,17,1,17,1,17,1,18,1,18,
        1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,
        1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,
        1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,
        1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,
        1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,3,29,239,
        8,29,1,29,1,29,5,29,243,8,29,10,29,12,29,246,9,29,3,29,248,8,29,
        1,30,3,30,251,8,30,1,30,1,30,1,30,4,30,256,8,30,11,30,12,30,257,
        1,30,1,30,5,30,262,8,30,10,30,12,30,265,9,30,1,30,1,30,4,30,269,
        8,30,11,30,12,30,270,3,30,273,8,30,1,31,1,31,3,31,277,8,31,1,31,
        1,31,1,31,5,31,282,8,31,10,31,12,31,285,9,31,1,32,1,32,1,32,1,32,
        5,32,291,8,32,10,32,12,32,294,9,32,1,33,3,33,297,8,33,1,33,1,33,
        1,34,1,34,1,34,5,34,304,8,34,10,34,12,34,307,9,34,1,34,1,34,1,35,
        3,35,312,8,35,1,36,3,36,315,8,36,1,37,1,37,1,37,3,37,320,8,37,1,
        38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,
        40,1,40,1,41,1,41,1,42,1,42,3,42,341,8,42,1,43,1,43,1,44,1,44,1,
        44,1,44,3,44,349,8,44,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,
        45,3,45,360,8,45,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,
        48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,5,49,379,8,49,10,49,12,49,
        382,9,49,1,50,1,50,1,50,1,50,0,0,51,2,1,4,2,6,3,8,4,10,5,12,6,14,
        7,16,8,18,9,20,10,22,11,24,12,26,13,28,14,30,15,32,16,34,17,36,18,
        38,19,40,20,42,21,44,22,46,23,48,24,50,25,52,26,54,27,56,28,58,29,
        60,30,62,31,64,32,66,33,68,34,70,35,72,0,74,0,76,0,78,0,80,0,82,
        0,84,0,86,0,88,0,90,0,92,0,94,0,96,0,98,36,100,37,102,38,2,0,1,13,
        2,0,88,88,120,120,1,0,37,37,2,0,42,43,46,46,2,0,9,9,32,32,2,0,10,
        10,13,13,2,0,34,34,92,92,12,0,35,35,49,49,51,51,53,53,55,55,57,57,
        66,66,68,68,70,70,98,98,100,100,102,102,11,0,48,48,50,50,52,52,54,
        54,56,56,64,65,67,67,69,69,97,97,99,99,101,101,2,0,65,90,97,122,
        1,0,49,57,8,0,34,34,39,39,92,92,98,98,102,102,110,110,114,114,116,
        116,2,0,8,62,64,126,4,0,32,32,45,46,58,58,95,95,399,0,2,1,0,0,0,
        0,4,1,0,0,0,0,6,1,0,0,0,0,8,1,0,0,0,0,10,1,0,0,0,0,12,1,0,0,0,0,
        14,1,0,0,0,0,16,1,0,0,0,0,18,1,0,0,0,0,20,1,0,0,0,0,22,1,0,0,0,0,
        24,1,0,0,0,0,26,1,0,0,0,0,28,1,0,0,0,0,30,1,0,0,0,0,32,1,0,0,0,0,
        34,1,0,0,0,0,36,1,0,0,0,0,38,1,0,0,0,0,40,1,0,0,0,0,42,1,0,0,0,0,
        44,1,0,0,0,0,46,1,0,0,0,0,48,1,0,0,0,0,50,1,0,0,0,0,52,1,0,0,0,0,
        54,1,0,0,0,0,56,1,0,0,0,0,58,1,0,0,0,0,60,1,0,0,0,0,62,1,0,0,0,0,
        64,1,0,0,0,0,66,1,0,0,0,0,68,1,0,0,0,0,70,1,0,0,0,0,98,1,0,0,0,1,
        100,1,0,0,0,1,102,1,0,0,0,2,104,1,0,0,0,4,107,1,0,0,0,6,110,1,0,
        0,0,8,113,1,0,0,0,10,120,1,0,0,0,12,122,1,0,0,0,14,124,1,0,0,0,16,
        126,1,0,0,0,18,128,1,0,0,0,20,131,1,0,0,0,22,137,1,0,0,0,24,139,
        1,0,0,0,26,144,1,0,0,0,28,146,1,0,0,0,30,149,1,0,0,0,32,151,1,0,
        0,0,34,154,1,0,0,0,36,157,1,0,0,0,38,160,1,0,0,0,40,169,1,0,0,0,
        42,176,1,0,0,0,44,182,1,0,0,0,46,192,1,0,0,0,48,199,1,0,0,0,50,220,
        1,0,0,0,52,228,1,0,0,0,54,230,1,0,0,0,56,232,1,0,0,0,58,234,1,0,
        0,0,60,247,1,0,0,0,62,250,1,0,0,0,64,276,1,0,0,0,66,286,1,0,0,0,
        68,296,1,0,0,0,70,300,1,0,0,0,72,311,1,0,0,0,74,314,1,0,0,0,76,319,
        1,0,0,0,78,321,1,0,0,0,80,326,1,0,0,0,82,331,1,0,0,0,84,336,1,0,
        0,0,86,340,1,0,0,0,88,342,1,0,0,0,90,348,1,0,0,0,92,359,1,0,0,0,
        94,361,1,0,0,0,96,368,1,0,0,0,98,370,1,0,0,0,100,374,1,0,0,0,102,
        383,1,0,0,0,104,105,5,40,0,0,105,106,3,78,38,0,106,3,1,0,0,0,107,
        108,5,40,0,0,108,109,3,80,39,0,109,5,1,0,0,0,110,111,3,82,40,0,111,
        112,5,41,0,0,112,7,1,0,0,0,113,114,3,98,48,0,114,115,3,100,49,0,
        115,116,3,102,50,0,116,117,3,76,37,0,117,118,3,76,37,0,118,119,5,
        41,0,0,119,9,1,0,0,0,120,121,7,0,0,0,121,11,1,0,0,0,122,123,5,63,
        0,0,123,13,1,0,0,0,124,125,5,58,0,0,125,15,1,0,0,0,126,127,7,1,0,
        0,127,17,1,0,0,0,128,129,7,2,0,0,129,19,1,0,0,0,130,132,7,3,0,0,
        131,130,1,0,0,0,132,133,1,0,0,0,133,131,1,0,0,0,133,134,1,0,0,0,
        134,135,1,0,0,0,135,136,6,9,0,0,136,21,1,0,0,0,137,138,5,44,0,0,
        138,23,1,0,0,0,139,140,5,101,0,0,140,141,5,99,0,0,141,142,5,104,
        0,0,142,143,5,111,0,0,143,25,1,0,0,0,144,145,5,61,0,0,145,27,1,0,
        0,0,146,147,5,33,0,0,147,148,5,61,0,0,148,29,1,0,0,0,149,150,5,126,
        0,0,150,31,1,0,0,0,151,152,5,33,0,0,152,153,5,126,0,0,153,33,1,0,
        0,0,154,155,5,58,0,0,155,156,5,61,0,0,156,35,1,0,0,0,157,158,5,63,
        0,0,158,159,5,61,0,0,159,37,1,0,0,0,160,161,5,100,0,0,161,162,5,
        101,0,0,162,163,5,115,0,0,163,164,5,99,0,0,164,165,5,114,0,0,165,
        166,5,105,0,0,166,167,5,98,0,0,167,168,5,101,0,0,168,39,1,0,0,0,
        169,170,5,104,0,0,170,171,5,105,0,0,171,172,5,100,0,0,172,173,5,
        100,0,0,173,174,5,101,0,0,174,175,5,110,0,0,175,41,1,0,0,0,176,177,
        5,99,0,0,177,178,5,111,0,0,178,179,5,110,0,0,179,180,5,115,0,0,180,
        181,5,116,0,0,181,43,1,0,0,0,182,183,5,105,0,0,183,184,5,109,0,0,
        184,185,5,109,0,0,185,186,5,117,0,0,186,187,5,116,0,0,187,188,5,
        97,0,0,188,189,5,98,0,0,189,190,5,108,0,0,190,191,5,101,0,0,191,
        45,1,0,0,0,192,193,5,101,0,0,193,194,5,120,0,0,194,195,5,112,0,0,
        195,196,5,111,0,0,196,197,5,114,0,0,197,198,5,116,0,0,198,47,1,0,
        0,0,199,200,5,114,0,0,200,201,5,101,0,0,201,202,5,109,0,0,202,203,
        5,111,0,0,203,204,5,118,0,0,204,205,5,101,0,0,205,206,5,65,0,0,206,
        207,5,108,0,0,207,208,5,108,0,0,208,209,5,80,0,0,209,210,5,114,0,
        0,210,211,5,105,0,0,211,212,5,118,0,0,212,213,5,97,0,0,213,214,5,
        116,0,0,214,215,5,101,0,0,215,216,5,84,0,0,216,217,5,97,0,0,217,
        218,5,103,0,0,218,219,5,115,0,0,219,49,1,0,0,0,220,221,5,118,0,0,
        221,222,5,101,0,0,222,223,5,114,0,0,223,224,5,115,0,0,224,225,5,
        105,0,0,225,226,5,111,0,0,226,227,5,110,0,0,227,51,1,0,0,0,228,229,
        5,91,0,0,229,53,1,0,0,0,230,231,5,93,0,0,231,55,1,0,0,0,232,233,
        5,47,0,0,233,57,1,0,0,0,234,235,5,45,0,0,235,59,1,0,0,0,236,248,
        5,48,0,0,237,239,5,45,0,0,238,237,1,0,0,0,238,239,1,0,0,0,239,240,
        1,0,0,0,240,244,3,88,43,0,241,243,3,86,42,0,242,241,1,0,0,0,243,
        246,1,0,0,0,244,242,1,0,0,0,244,245,1,0,0,0,245,248,1,0,0,0,246,
        244,1,0,0,0,247,236,1,0,0,0,247,238,1,0,0,0,248,61,1,0,0,0,249,251,
        5,45,0,0,250,249,1,0,0,0,250,251,1,0,0,0,251,272,1,0,0,0,252,253,
        5,48,0,0,253,255,5,46,0,0,254,256,3,86,42,0,255,254,1,0,0,0,256,
        257,1,0,0,0,257,255,1,0,0,0,257,258,1,0,0,0,258,273,1,0,0,0,259,
        263,3,88,43,0,260,262,3,86,42,0,261,260,1,0,0,0,262,265,1,0,0,0,
        263,261,1,0,0,0,263,264,1,0,0,0,264,266,1,0,0,0,265,263,1,0,0,0,
        266,268,5,46,0,0,267,269,3,86,42,0,268,267,1,0,0,0,269,270,1,0,0,
        0,270,268,1,0,0,0,270,271,1,0,0,0,271,273,1,0,0,0,272,252,1,0,0,
        0,272,259,1,0,0,0,273,63,1,0,0,0,274,277,3,84,41,0,275,277,5,95,
        0,0,276,274,1,0,0,0,276,275,1,0,0,0,277,283,1,0,0,0,278,282,3,84,
        41,0,279,282,3,86,42,0,280,282,5,95,0,0,281,278,1,0,0,0,281,279,
        1,0,0,0,281,280,1,0,0,0,282,285,1,0,0,0,283,281,1,0,0,0,283,284,
        1,0,0,0,284,65,1,0,0,0,285,283,1,0,0,0,286,287,5,47,0,0,287,288,
        5,47,0,0,288,292,1,0,0,0,289,291,8,4,0,0,290,289,1,0,0,0,291,294,
        1,0,0,0,292,290,1,0,0,0,292,293,1,0,0,0,293,67,1,0,0,0,294,292,1,
        0,0,0,295,297,5,13,0,0,296,295,1,0,0,0,296,297,1,0,0,0,297,298,1,
        0,0,0,298,299,5,10,0,0,299,69,1,0,0,0,300,305,5,34,0,0,301,304,3,
        90,44,0,302,304,8,5,0,0,303,301,1,0,0,0,303,302,1,0,0,0,304,307,
        1,0,0,0,305,303,1,0,0,0,305,306,1,0,0,0,306,308,1,0,0,0,307,305,
        1,0,0,0,308,309,5,34,0,0,309,71,1,0,0,0,310,312,7,6,0,0,311,310,
        1,0,0,0,312,73,1,0,0,0,313,315,7,7,0,0,314,313,1,0,0,0,315,75,1,
        0,0,0,316,320,3,72,35,0,317,320,3,74,36,0,318,320,3,10,4,0,319,316,
        1,0,0,0,319,317,1,0,0,0,319,318,1,0,0,0,320,77,1,0,0,0,321,322,3,
        76,37,0,322,323,3,76,37,0,323,324,3,76,37,0,324,325,3,74,36,0,325,
        79,1,0,0,0,326,327,3,76,37,0,327,328,3,76,37,0,328,329,3,76,37,0,
        329,330,3,72,35,0,330,81,1,0,0,0,331,332,3,76,37,0,332,333,3,76,
        37,0,333,334,3,76,37,0,334,335,3,76,37,0,335,83,1,0,0,0,336,337,
        7,8,0,0,337,85,1,0,0,0,338,341,5,48,0,0,339,341,3,88,43,0,340,338,
        1,0,0,0,340,339,1,0,0,0,341,87,1,0,0,0,342,343,7,9,0,0,343,89,1,
        0,0,0,344,345,5,92,0,0,345,349,7,10,0,0,346,349,3,94,46,0,347,349,
        3,92,45,0,348,344,1,0,0,0,348,346,1,0,0,0,348,347,1,0,0,0,349,91,
        1,0,0,0,350,351,5,92,0,0,351,352,2,48,51,0,352,353,2,48,55,0,353,
        360,2,48,55,0,354,355,5,92,0,0,355,356,2,48,55,0,356,360,2,48,55,
        0,357,358,5,92,0,0,358,360,2,48,55,0,359,350,1,0,0,0,359,354,1,0,
        0,0,359,357,1,0,0,0,360,93,1,0,0,0,361,362,5,92,0,0,362,363,5,117,
        0,0,363,364,3,76,37,0,364,365,3,76,37,0,365,366,3,76,37,0,366,367,
        3,76,37,0,367,95,1,0,0,0,368,369,7,11,0,0,369,97,1,0,0,0,370,371,
        5,123,0,0,371,372,1,0,0,0,372,373,6,48,1,0,373,99,1,0,0,0,374,380,
        3,84,41,0,375,379,3,84,41,0,376,379,3,86,42,0,377,379,7,12,0,0,378,
        375,1,0,0,0,378,376,1,0,0,0,378,377,1,0,0,0,379,382,1,0,0,0,380,
        378,1,0,0,0,380,381,1,0,0,0,381,101,1,0,0,0,382,380,1,0,0,0,383,
        384,5,125,0,0,384,385,1,0,0,0,385,386,6,50,2,0,386,103,1,0,0,0,26,
        0,1,133,238,244,247,250,257,263,270,272,276,281,283,292,296,303,
        305,311,314,319,340,348,359,378,380,3,6,0,0,2,1,0,2,0,0
    ]

class DE6Lexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    PVT_CREATOR_MODE = 1

    PUBLIC_GROUP = 1
    PVT_GROUP = 2
    PUBLIC_ELEMENT = 3
    PVT_ELEMENT = 4
    HEXDIGIT_WILDCARD = 5
    TEST_SYMBOL = 6
    TEST_SEPERATOR = 7
    ITEM_WILDCARD = 8
    SEQ_WILDCARD = 9
    WS = 10
    COMMA = 11
    ECHO = 12
    EQUALS = 13
    NOT_EQUALS = 14
    MATCHES = 15
    NOT_MATCHES = 16
    ASSIGN = 17
    ASSIGN_IF_EXISTS = 18
    DESCRIBE = 19
    HIDDEN_TOKEN = 20
    CONST_TOKEN = 21
    IMMUTABLE_TOKEN = 22
    EXPORT = 23
    REMOVE_ALL_PRIVATE_TAGS = 24
    VERSION_WORD = 25
    LEFT_BRACKET = 26
    RIGHT_BRACKET = 27
    SLASH = 28
    DELETE_OPERATOR = 29
    INTEGER = 30
    FLOAT = 31
    ID = 32
    COMMENT = 33
    NEWLINE = 34
    STRING = 35
    OPEN = 36
    PVT_CREATOR_ID = 37
    CLOSE = 38

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE", "PVT_CREATOR_MODE" ]

    literalNames = [ "<INVALID>",
            "'?'", "':'", "','", "'echo'", "'='", "'!='", "'~'", "'!~'", 
            "':='", "'?='", "'describe'", "'hidden'", "'const'", "'immutable'", 
            "'export'", "'removeAllPrivateTags'", "'version'", "'['", "']'", 
            "'/'", "'-'", "'{'", "'}'" ]

    symbolicNames = [ "<INVALID>",
            "PUBLIC_GROUP", "PVT_GROUP", "PUBLIC_ELEMENT", "PVT_ELEMENT", 
            "HEXDIGIT_WILDCARD", "TEST_SYMBOL", "TEST_SEPERATOR", "ITEM_WILDCARD", 
            "SEQ_WILDCARD", "WS", "COMMA", "ECHO", "EQUALS", "NOT_EQUALS", 
            "MATCHES", "NOT_MATCHES", "ASSIGN", "ASSIGN_IF_EXISTS", "DESCRIBE", 
            "HIDDEN_TOKEN", "CONST_TOKEN", "IMMUTABLE_TOKEN", "EXPORT", 
            "REMOVE_ALL_PRIVATE_TAGS", "VERSION_WORD", "LEFT_BRACKET", "RIGHT_BRACKET", 
            "SLASH", "DELETE_OPERATOR", "INTEGER", "FLOAT", "ID", "COMMENT", 
            "NEWLINE", "STRING", "OPEN", "PVT_CREATOR_ID", "CLOSE" ]

    ruleNames = [ "PUBLIC_GROUP", "PVT_GROUP", "PUBLIC_ELEMENT", "PVT_ELEMENT", 
                  "HEXDIGIT_WILDCARD", "TEST_SYMBOL", "TEST_SEPERATOR", 
                  "ITEM_WILDCARD", "SEQ_WILDCARD", "WS", "COMMA", "ECHO", 
                  "EQUALS", "NOT_EQUALS", "MATCHES", "NOT_MATCHES", "ASSIGN", 
                  "ASSIGN_IF_EXISTS", "DESCRIBE", "HIDDEN_TOKEN", "CONST_TOKEN", 
                  "IMMUTABLE_TOKEN", "EXPORT", "REMOVE_ALL_PRIVATE_TAGS", 
                  "VERSION_WORD", "LEFT_BRACKET", "RIGHT_BRACKET", "SLASH", 
                  "DELETE_OPERATOR", "INTEGER", "FLOAT", "ID", "COMMENT", 
                  "NEWLINE", "STRING", "ODD_HEXDIGIT", "EVEN_HEXDIGIT", 
                  "HEXDIGIT", "EVEN_HEXWORD", "ODD_HEXWORD", "HEXWORD", 
                  "LETTER", "DIGIT", "NON_ZERO_DIGIT", "ESC_SEQ", "OCTAL_ESC", 
                  "UNICODE_ESC", "DICOM_DEFAULT_LO_CHAR", "OPEN", "PVT_CREATOR_ID", 
                  "CLOSE" ]

    grammarFileName = "DE6Lexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


